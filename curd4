1. create component 

ng g c components/login    
ng g c components/dashboard

2. app-routing.module.ts

import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { LoginComponent } from './components/login/login.component';
import { DashboardComponent } from './components/dashboard/dashboard.component';

const routes: Routes = [
  { path: '', component: LoginComponent },
  { path: 'dashboard', component: DashboardComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

3. app.component.html

<router-outlet></router-outlet>

4. app.module.ts

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { FormsModule } from '@angular/forms';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { LoginComponent } from './components/login/login.component';
import { DashboardComponent } from './components/dashboard/dashboard.component';

@NgModule({
  declarations: [
    AppComponent,
    LoginComponent,
    DashboardComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule, 
    FormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

5. dashboard.component.html 

<h2>User Dashboard</h2>

<input type="text" [(ngModel)]="newUser.email" placeholder="Email">
<input type="password" [(ngModel)]="newUser.password" placeholder="Password">

<button *ngIf="editIndex === -1" (click)="addUser()">Add User</button>
<button *ngIf="editIndex !== -1" (click)="updateUser()">Update User</button>

<table border="1" style="margin-top:20px;">
  <tr>
    <th>Email</th>
    <th>Password</th>
    <th>Actions</th>
  </tr>
  <tr *ngFor="let user of users; let i=index">
    <td>{{user.email}}</td>
    <td>{{user.password}}</td>
    <td>
      <button (click)="editUser(i)">Edit</button>
      <button (click)="deleteUser(i)">Delete</button>
    </td>
  </tr>
</table>

6. dashboard.component.ts

import { Component } from '@angular/core';

interface User {
  email: string;
  password: string;
}

@Component({
  selector: 'app-dashboard',
  templateUrl: './dashboard.component.html',
  styleUrls: ['./dashboard.component.scss']
})
export class DashboardComponent {

    users: User[] = [];
  newUser: User = { email: '', password: '' };
  editIndex: number = -1;

  ngOnInit() {
    this.loadUsers();
  }

  loadUsers() {
    this.users = JSON.parse(localStorage.getItem('users') || '[]');
  }

  addUser() {
    this.users.push({ ...this.newUser });
    this.saveUsers();
    this.newUser = { email: '', password: '' };
  }

  editUser(index: number) {
    this.newUser = { ...this.users[index] };
    this.editIndex = index;
  }

  updateUser() {
    this.users[this.editIndex] = { ...this.newUser };
    this.saveUsers();
    this.newUser = { email: '', password: '' };
    this.editIndex = -1;
  }

  deleteUser(index: number) {
    this.users.splice(index, 1);
    this.saveUsers();
  }

  saveUsers() {
    localStorage.setItem('users', JSON.stringify(this.users));
  }
  
}

7. login.component.html

<div class="login-box">
  <h2>User Login</h2>
  <input type="text" [(ngModel)]="email" placeholder="Email">
  <input type="password" [(ngModel)]="password" placeholder="Password">
  <button (click)="login()">Login</button>
</div>


8. login.component.ts 

import { Component } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.scss']
})
export class LoginComponent {
  email: string = '';
  password: string = '';

  constructor(private router: Router) {}

  login() {
    // Regex for Gmail only
    const emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;

    if (!this.email || !this.password) {
      alert('Please enter Email and Password');
      return;
    }

    if (!emailPattern.test(this.email)) {
      alert('Please enter a valid Gmail address (example@gmail.com)');
      return;
    }

    // Save user data to localStorage
    let users = JSON.parse(localStorage.getItem('users') || '[]');
    users.push({ email: this.email, password: this.password });
    localStorage.setItem('users', JSON.stringify(users));

    // Navigate to dashboard
    this.router.navigate(['/dashboard']);
  }
}

