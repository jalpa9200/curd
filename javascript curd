<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Employee Management System</title>

    <!-- Bootstrap CDN -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="style.css" />
  </head>
  <body>
    <div class="container my-5">
      <h2 class="text-center mb-4">Employee Management System</h2>

      <!-- Employee Form -->
      <div class="card p-4 shadow-lg">
        <form id="employeeForm">
          <div class="row g-3">
            <div class="col-md-4">
              <label class="form-label">Name</label>
              <input
                type="text"
                id="name"
                class="form-control"
                placeholder="Enter name"
                required
              />
            </div>
            <div class="col-md-4">
              <label class="form-label">Email</label>
              <input
                type="email"
                id="email"
                class="form-control"
                placeholder="Enter email"
                required
              />
            </div>
            <div class="col-md-4">
              <label class="form-label">Department</label>
              <input
                type="text"
                id="department"
                class="form-control"
                placeholder="Enter department"
                required
              />
            </div>
            <div class="col-md-6">
              <label class="form-label">Designation</label>
              <input
                type="text"
                id="designation"
                class="form-control"
                placeholder="Enter designation"
                required
              />
            </div>
            <div class="col-md-6">
              <label class="form-label">Experience (years)</label>
              <input
                type="number"
                id="experience"
                class="form-control"
                placeholder="Enter experience"
                required
              />
            </div>
          </div>

          <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary" id="addBtn">
              Add Employee
            </button>
            <!-- <button type="button" class="btn btn-success d-none" id="updateBtn">Update Employee</button> -->
            <button type="button" class="btn btn-success d-none" id="updateBtn">
              Update Employee
            </button>
            <button type="reset" class="btn btn-secondary">Clear</button>
          </div>
        </form>
      </div>

      <!-- Employee Table -->
      <div class="mt-5">
        <h4 class="mb-3">Employee List</h4>
        <input
          type="text"
          id="searchBox"
          class="form-control mb-3"
          placeholder="Search by name or department..."
        />

        <div class="table-responsive">
          <table
            class="table table-bordered table-striped text-center align-middle"
          >
            <thead class="table-dark">
              <tr>
                <th>#</th>
                <th>Name</th>
                <th>Email</th>
                <th>Department</th>
                <th>Designation</th>
                <th>Experience</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="employeeTableBody">
              <!-- Rows will be inserted here dynamically -->
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <!-- Toast Notification -->
    <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 9999">
      <div
        id="toastMessage"
        class="toast align-items-center text-bg-success border-0"
        role="alert"
        aria-live="assertive"
        aria-atomic="true"
      >
        <div class="d-flex">
          <div class="toast-body" id="toastBody">Message here</div>
          <button
            type="button"
            class="btn-close btn-close-white me-2 m-auto"
            data-bs-dismiss="toast"
            aria-label="Close"
          ></button>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="script.js"></script>
  </body>
</html>



  let employees = JSON.parse(localStorage.getItem("employees")) || [];
let editIndex = null;

displayEmployees();

const form = document.getElementById("employeeForm");
const addBtn = document.getElementById("addBtn");
const updateBtn = document.getElementById("updateBtn");

// CREATE or UPDATE employee
form.addEventListener("submit", (e) => {
  e.preventDefault();

  const name = document.getElementById("name").value.trim();
  const email = document.getElementById("email").value.trim();
  const department = document.getElementById("department").value.trim();
  const designation = document.getElementById("designation").value.trim();
  const experience = document.getElementById("experience").value.trim();

  if (!name || !email || !department || !designation || !experience) {
    showToast("Please fill all fields!", "danger");
    return;
  }

  const employeeData = { name, email, department, designation, experience };

  if (editIndex === null) {
    // CREATE
    employees.push(employeeData);
    showToast("Employee added successfully!", "success");
  } else {
    // UPDATE
    employees[editIndex] = employeeData;
    editIndex = null;
    addBtn.classList.remove("d-none");
    updateBtn.classList.add("d-none");
    showToast("Employee updated successfully!", "info");
  }

  localStorage.setItem("employees", JSON.stringify(employees));
  form.reset();
  displayEmployees();
});

// ✅ Trigger form submit when Update button is clicked
updateBtn.addEventListener("click", function () {
  form.dispatchEvent(new Event("submit"));
});

// READ - display employees
function displayEmployees(filteredList = employees) {
  const tbody = document.getElementById("employeeTableBody");
  tbody.innerHTML = "";

  if (filteredList.length === 0) {
    tbody.innerHTML = `<tr><td colspan="7">No Employees Found</td></tr>`;
    return;
  }

  filteredList.forEach((emp, index) => {
    const row = `
      <tr>
        <td>${index + 1}</td>
        <td>${emp.name}</td>
        <td>${emp.email}</td>
        <td>${emp.department}</td>
        <td>${emp.designation}</td>
        <td>${emp.experience}</td>
        <td>
          <button class="btn btn-sm btn-warning" onclick="editEmployee(${index})">Edit</button>
          <button class="btn btn-sm btn-danger" onclick="deleteEmployee(${index})">Delete</button>
        </td>
      </tr>
    `;
    tbody.innerHTML += row;
  });
}

// DELETE employee
function deleteEmployee(index) {
  if (confirm("Are you sure you want to delete this employee?")) {
    employees.splice(index, 1);
    localStorage.setItem("employees", JSON.stringify(employees));
    displayEmployees();
    showToast("Employee deleted successfully!", "danger");
  }
}

// EDIT employee
function editEmployee(index) {
  const emp = employees[index];
  document.getElementById("name").value = emp.name;
  document.getElementById("email").value = emp.email;
  document.getElementById("department").value = emp.department;
  document.getElementById("designation").value = emp.designation;
  document.getElementById("experience").value = emp.experience;

  editIndex = index;
  addBtn.classList.add("d-none");
  updateBtn.classList.remove("d-none");
}

// SEARCH functionality
document.getElementById("searchBox").addEventListener("input", function () {
  const searchValue = this.value.toLowerCase();
  const filtered = employees.filter(
    (emp) =>
      emp.name.toLowerCase().includes(searchValue) ||
      emp.department.toLowerCase().includes(searchValue)
  );
  displayEmployees(filtered);
});

// ✅ Show Toast Function
function showToast(message, type = "success") {
  const toastEl = document.getElementById("toastMessage");
  const toastBody = document.getElementById("toastBody");

  toastBody.textContent = message;

  // Change background color by type
  toastEl.className = `toast align-items-center text-bg-${type} border-0`;

  const toast = new bootstrap.Toast(toastEl);
  toast.show();
}


body {
  background-color: #f8f9fa;
}

.card {
  border-radius: 10px;
}

.btn {
  min-width: 120px;
}

table {
  background-color: #fff;
  border-radius: 8px;
  overflow: hidden;
}
